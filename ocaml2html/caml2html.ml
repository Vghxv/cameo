# 1 "caml2html.mll"
 
let () =
	if Array.length Sys.argv <> 2
	|| not (Sys.file_exists Sys.argv.(1)) then begin
		Printf.eprintf "usage: caml2html file\n";
		exit 1
	end
let file = Sys.argv.(1)
let cout = open_out (file ^ ".html")
let print s = Printf.fprintf cout s
let () =
print "<html><head><title>%s</title><style>" file;
print ".keyword { color: green; } .comment { color: #990000; }";
print "</style></head><body><pre>"
let count = ref 0
let newline () = incr count; print "\n%3d: " !count
let () = newline ()
let is_keyword =
let ht = Hashtbl.create 97 in
List.iter
	(fun s -> Hashtbl.add ht s ())	
	[ "and"; "as"; "assert"; "asr"; "begin"; "class"];
fun s -> Hashtbl.mem ht s

# 27 "caml2html.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\248\255\249\255\001\000\250\255\251\255\252\255\000\000\
    \254\255\075\000\253\255\002\000\009\000\250\255\002\000\251\255\
    \252\255\253\255\003\000\003\000\255\255\254\255\007\000\165\000\
    \252\255\002\000\253\255\254\255\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\006\000\255\255\255\255\255\255\006\000\
    \255\255\000\000\255\255\255\255\255\255\255\255\005\000\255\255\
    \255\255\255\255\005\000\005\000\255\255\255\255\255\255\255\255\
    \255\255\003\000\255\255\255\255\255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\013\000\000\000\255\255\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\255\255\024\000\
    \000\000\024\000\000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\008\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\004\000\011\000\022\000\000\000\005\000\003\000\
    \007\000\002\000\010\000\015\000\021\000\020\000\013\000\000\000\
    \014\000\019\000\000\000\018\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\
    \000\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\000\000\000\000\000\000\000\000\009\000\
    \000\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\000\000\000\000\
    \000\000\000\000\009\000\000\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\000\000\028\000\
    \000\000\000\000\000\000\026\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\025\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\012\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\003\000\014\000\255\255\000\000\000\000\
    \000\000\011\000\007\000\012\000\018\000\019\000\022\000\255\255\
    \012\000\012\000\255\255\012\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\255\255\255\255\
    \255\255\255\255\009\000\255\255\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\255\255\023\000\
    \255\255\255\255\255\255\023\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\023\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\023\000\025\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\012\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\023\000";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec scan lexbuf =
   __ocaml_lex_scan_rec lexbuf 0
and __ocaml_lex_scan_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 28 "caml2html.mll"
            s
# 174 "caml2html.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 29 "caml2html.mll"
  ( if is_keyword s then begin
		print "<span class=\"keyword\">%s</span>" s
		end else
		print "%s" s;
		scan lexbuf )
# 182 "caml2html.ml"

  | 1 ->
# 35 "caml2html.mll"
  ( newline (); scan lexbuf )
# 187 "caml2html.ml"

  | 2 ->
# 37 "caml2html.mll"
  ( print "<span class=\"comment\">(*";
		comment lexbuf;
		print "</span>";
		scan lexbuf )
# 195 "caml2html.ml"

  | 3 ->
# 41 "caml2html.mll"
       ( print "&lt;"; scan lexbuf )
# 200 "caml2html.ml"

  | 4 ->
# 42 "caml2html.mll"
       ( print "&amp;"; scan lexbuf )
# 205 "caml2html.ml"

  | 5 ->
# 43 "caml2html.mll"
       ( print "\""; string lexbuf; scan lexbuf )
# 210 "caml2html.ml"

  | 6 ->
let
# 45 "caml2html.mll"
        s
# 216 "caml2html.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 45 "caml2html.mll"
          ( print "%s" s; scan lexbuf )
# 220 "caml2html.ml"

  | 7 ->
# 46 "caml2html.mll"
       ( () )
# 225 "caml2html.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_scan_rec lexbuf __ocaml_lex_state

and comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 12
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 49 "caml2html.mll"
        ( print "(*"; comment lexbuf; comment lexbuf )
# 237 "caml2html.ml"

  | 1 ->
# 50 "caml2html.mll"
        ( print "*)" )
# 242 "caml2html.ml"

  | 2 ->
# 51 "caml2html.mll"
       ( () )
# 247 "caml2html.ml"

  | 3 ->
# 52 "caml2html.mll"
        ( newline (); comment lexbuf )
# 252 "caml2html.ml"

  | 4 ->
# 53 "caml2html.mll"
       ( print "\""; string lexbuf; comment lexbuf )
# 257 "caml2html.ml"

  | 5 ->
let
# 55 "caml2html.mll"
        s
# 263 "caml2html.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 55 "caml2html.mll"
          ( print "%s" s; comment lexbuf )
# 267 "caml2html.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and string lexbuf =
   __ocaml_lex_string_rec lexbuf 23
and __ocaml_lex_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 57 "caml2html.mll"
       ( print "\"" )
# 279 "caml2html.ml"

  | 1 ->
# 58 "caml2html.mll"
       ( print "&lt;"; string lexbuf )
# 284 "caml2html.ml"

  | 2 ->
# 59 "caml2html.mll"
       ( print "&amp;"; string lexbuf )
# 289 "caml2html.ml"

  | 3 ->
let
# 61 "caml2html.mll"
        s
# 295 "caml2html.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 61 "caml2html.mll"
          ( print "%s" s; string lexbuf )
# 299 "caml2html.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_string_rec lexbuf __ocaml_lex_state

;;

# 62 "caml2html.mll"
 
let () =
	scan (Lexing.from_channel (open_in file));
	print "</pre>\n</body></html>\n";
	close_out cout

# 313 "caml2html.ml"
